version: '3.8'

services:
  yatrik-erp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yatrik-erp-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    networks:
      - yatrik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add MongoDB if not using external database
  # mongodb:
  #   image: mongo:7.0
  #   container_name: yatrik-mongodb
  #   restart: unless-stopped
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=your_mongodb_password
  #     - MONGO_INITDB_DATABASE=yatrik_erp
  #   volumes:
  #     - mongodb_data:/data/db
  #   networks:
  #     - yatrik-network

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7.2-alpine
  #   container_name: yatrik-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - yatrik-network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: yatrik-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - yatrik-erp
    networks:
      - yatrik-network

networks:
  yatrik-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
