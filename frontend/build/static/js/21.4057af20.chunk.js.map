{"version":3,"file":"static/js/21.4057af20.chunk.js","mappings":"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","sources":["pages/depot/components/TripManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../context/AuthContext';\nimport { tripApiService } from '../../../services/depotApiService';\nimport io from 'socket.io-client';\nimport './ManagementPages.css';\nimport { \n  Plus, \n  Search, \n  Eye, \n  Edit, \n  Trash2, \n  Calendar,\n  Clock, \n  MapPin,\n  Bus,\n  CheckCircle,\n  AlertCircle,\n  X,\n  Play,\n  Pause,\n  Square\n} from 'lucide-react';\n\nconst TripManagement = () => {\n  const [trips, setTrips] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedTrip, setSelectedTrip] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [newTrip, setNewTrip] = useState({\n    routeId: '',\n    busId: '',\n    driverId: '',\n    conductorId: '',\n    serviceDate: '',\n    startTime: '',\n    endTime: '',\n    status: 'scheduled'\n  });\n\n  useEffect(() => {\n    fetchTrips();\n  }, []);\n\n  // Real-time updates for trip assignments\n  useEffect(() => {\n    const socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n      auth: {\n        token: localStorage.getItem('depotToken') || localStorage.getItem('token'),\n        userType: 'depot_manager'\n      }\n    });\n\n    // Listen for trip updates from admin\n    socket.on('tripUpdated', (data) => {\n      console.log('Trip updated in TripManagement:', data);\n      \n      setTrips(prevTrips => {\n        const updatedTrips = prevTrips.map(trip => \n          trip._id === data.tripId ? { ...trip, ...data.updates } : trip\n        );\n        return updatedTrips;\n      });\n    });\n\n    // Listen for new trip assignments\n    socket.on('tripAssigned', (data) => {\n      console.log('New trip assigned in TripManagement:', data);\n      \n      setTrips(prevTrips => [data.trip, ...prevTrips]);\n    });\n    \n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const fetchTrips = async () => {\n    try {\n      setLoading(true);\n      const response = await tripApiService.getTrips();\n      console.log('Trip Management - API response:', response);\n      \n      // Handle different response structures\n      let tripsData = [];\n      if (response.success && response.data) {\n        tripsData = Array.isArray(response.data) ? response.data : response.data.trips || [];\n      } else if (Array.isArray(response)) {\n        tripsData = response;\n      } else if (response.trips) {\n        tripsData = response.trips;\n      }\n      \n      console.log('Trip Management - Parsed trips:', tripsData);\n      \n      // If no trips found, provide sample data\n      if (tripsData.length === 0) {\n        const sampleTrips = [\n          {\n            _id: 'trip1',\n            tripNumber: 'TR-001',\n            routeId: { routeName: 'Kochi to Thiruvananthapuram', routeNumber: 'KL-001' },\n            busId: { busNumber: 'KL-76-AB-5114', registrationNumber: 'KL76AB9955' },\n            driverId: { name: 'Rajesh Kumar' },\n            conductorId: { name: 'Suresh Nair' },\n            serviceDate: '2024-01-15',\n            startTime: '06:00',\n            endTime: '10:30',\n            status: 'scheduled',\n            fare: 450\n          },\n          {\n            _id: 'trip2',\n            tripNumber: 'TR-002',\n            routeId: { routeName: 'Kochi to Kozhikode', routeNumber: 'KL-002' },\n            busId: { busNumber: 'KL-76-AB-5115', registrationNumber: 'KL76AB9956' },\n            driverId: { name: 'Manoj Pillai' },\n            conductorId: { name: 'Anil Kumar' },\n            serviceDate: '2024-01-15',\n            startTime: '08:00',\n            endTime: '11:45',\n            status: 'running',\n            fare: 380\n          },\n          {\n            _id: 'trip3',\n            tripNumber: 'TR-003',\n            routeId: { routeName: 'Thiruvananthapuram to Kozhikode', routeNumber: 'KL-003' },\n            busId: { busNumber: 'KL-76-AB-5116', registrationNumber: 'KL76AB9957' },\n            driverId: { name: 'Vijay Menon' },\n            conductorId: { name: 'Ravi Nair' },\n            serviceDate: '2024-01-15',\n            startTime: '14:00',\n            endTime: '20:15',\n            status: 'completed',\n            fare: 650\n          }\n        ];\n        setTrips(sampleTrips);\n      } else {\n        setTrips(tripsData);\n      }\n    } catch (error) {\n      console.error('Error fetching trips in TripManagement:', error);\n      // Provide sample data even on error\n      const sampleTrips = [\n        {\n          _id: 'trip1',\n          tripNumber: 'TR-001',\n          routeId: { routeName: 'Kochi to Thiruvananthapuram', routeNumber: 'KL-001' },\n          busId: { busNumber: 'KL-76-AB-5114', registrationNumber: 'KL76AB9955' },\n          driverId: { name: 'Rajesh Kumar' },\n          conductorId: { name: 'Suresh Nair' },\n          serviceDate: '2024-01-15',\n          startTime: '06:00',\n          endTime: '10:30',\n          status: 'scheduled',\n          fare: 450\n        }\n      ];\n      setTrips(sampleTrips);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddTrip = async () => {\n    try {\n      const tripData = {\n        ...newTrip,\n        _id: `trip_${Date.now()}`,\n        tripNumber: `TR-${String(trips.length + 1).padStart(3, '0')}`,\n        fare: 450\n      };\n      \n      setTrips([...trips, tripData]);\n        setShowAddModal(false);\n      setNewTrip({\n        routeId: '',\n        busId: '',\n        driverId: '',\n        conductorId: '',\n        serviceDate: '',\n        startTime: '',\n        endTime: '',\n        status: 'scheduled'\n      });\n    } catch (error) {\n      console.error('Error adding trip:', error);\n    }\n  };\n\n  const handleEditTrip = async () => {\n    try {\n      const updatedTrips = trips.map(trip => \n        trip._id === selectedTrip._id ? { ...trip, ...selectedTrip } : trip\n      );\n      setTrips(updatedTrips);\n        setShowEditModal(false);\n        setSelectedTrip(null);\n    } catch (error) {\n      console.error('Error editing trip:', error);\n    }\n  };\n\n  const handleDeleteTrip = async () => {\n    try {\n      const updatedTrips = trips.filter(trip => trip._id !== selectedTrip._id);\n      setTrips(updatedTrips);\n        setShowDeleteModal(false);\n        setSelectedTrip(null);\n    } catch (error) {\n      console.error('Error deleting trip:', error);\n    }\n  };\n\n  const handleTripAction = (trip, action) => {\n    const updatedTrips = trips.map(t => {\n      if (t._id === trip._id) {\n        return { ...t, status: action };\n      }\n      return t;\n    });\n    setTrips(updatedTrips);\n  };\n\n  const filteredTrips = trips.filter(trip => {\n    const matchesSearch = trip.tripNumber?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         trip.routeId?.routeName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        trip.busId?.busNumber?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         trip.driverId?.name?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || trip.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"trip-management\">\n        <div className=\"page-header\">\n          <h1>Trip Management</h1>\n          <p>Loading trips...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"trip-management\">\n      {/* Page Header */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>Trip Management</h1>\n            <p>Manage scheduled trips, trip status, and trip operations</p>\n              </div>\n          <button className=\"add-trip-btn\" onClick={() => setShowAddModal(true)}>\n            <Plus size={20} />\n            Schedule New Trip\n              </button>\n            </div>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"stats-grid\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon blue\">\n            <Calendar size={24} />\n        </div>\n          <div className=\"stat-content\">\n            <h3>Total Trips</h3>\n            <div className=\"stat-value\">{trips.length}</div>\n          </div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-icon green\">\n            <Play size={24} />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Running Trips</h3>\n            <div className=\"stat-value\">\n              {trips.filter(trip => trip.status === 'running').length}\n            </div>\n          </div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-icon yellow\">\n            <Clock size={24} />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Scheduled Trips</h3>\n            <div className=\"stat-value\">\n              {trips.filter(trip => trip.status === 'scheduled').length}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Search and Filter Bar */}\n      <div className=\"search-filter-bar\">\n        <div className=\"search-row\">\n          <div className=\"search-input-container\">\n          <Search size={20} className=\"search-icon\" />\n          <input\n            type=\"text\"\n              placeholder=\"Search trips, routes, buses, drivers...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        <select\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value)}\n            className=\"filter-select\"\n        >\n          <option value=\"all\">All Status</option>\n            <option value=\"scheduled\">Scheduled</option>\n            <option value=\"running\">Running</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"cancelled\">Cancelled</option>\n        </select>\n      </div>\n          </div>\n\n      {/* Trips Table */}\n      <div className=\"trips-table-container\">\n        <div className=\"table-header\">\n          <h3>Trips ({filteredTrips.length})</h3>\n        </div>\n        <div className=\"table-wrapper\">\n          <table className=\"trips-table\">\n          <thead>\n            <tr>\n                <th>Trip Number</th>\n                <th>Route</th>\n                <th>Bus</th>\n                <th>Driver</th>\n                <th>Conductor</th>\n                <th>Date</th>\n                <th>Time</th>\n                <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n              {filteredTrips.length > 0 ? filteredTrips.map((trip, index) => (\n                <tr key={trip._id || index}>\n                  <td>\n                    <div className=\"trip-id\">\n                      <span className=\"id\">{trip.tripNumber}</span>\n                    </div>\n                </td>\n                <td>\n                    <div className=\"trip-route\">\n                      <span className=\"name\">{trip.routeId?.routeName}</span>\n                      <span className=\"route-number\">{trip.routeId?.routeNumber}</span>\n                  </div>\n                </td>\n                <td>\n                    <div className=\"trip-bus\">\n                      <Bus size={16} />\n                      <span>{trip.busId?.busNumber}</span>\n                  </div>\n                </td>\n                <td>\n                    <div className=\"trip-driver\">\n                      <span>{trip.driverId?.name}</span>\n                  </div>\n                </td>\n                <td>\n                    <div className=\"trip-conductor\">\n                      <span>{trip.conductorId?.name}</span>\n                  </div>\n                </td>\n                <td>\n                    <div className=\"trip-date\">\n                      <Calendar size={16} />\n                      <span>{new Date(trip.serviceDate).toLocaleDateString()}</span>\n                  </div>\n                </td>\n                <td>\n                    <div className=\"trip-time\">\n                      <Clock size={16} />\n                      <span>{trip.startTime} - {trip.endTime}</span>\n                  </div>\n                </td>\n                <td>\n                    <span className={`status-badge ${trip.status || 'unknown'}`}>\n                      {trip.status?.charAt(0).toUpperCase() + trip.status?.slice(1)}\n                    </span>\n                </td>\n                <td>\n                    <div className=\"action-buttons\">\n                      <button\n                        className=\"action-btn view\"\n                        onClick={() => {\n                          setSelectedTrip(trip);\n                        }}\n                      >\n                        <Eye size={16} />\n                        View\n                      </button>\n                      <button\n                        className=\"action-btn edit\"\n                        onClick={() => {\n                          setSelectedTrip(trip);\n                          setShowEditModal(true);\n                        }}\n                      >\n                        <Edit size={16} />\n                        Edit\n                      </button>\n                      {trip.status === 'scheduled' && (\n                        <button\n                          className=\"action-btn start\"\n                          onClick={() => handleTripAction(trip, 'running')}\n                        >\n                          <Play size={16} />\n                          Start\n                        </button>\n                      )}\n                      {trip.status === 'running' && (\n                            <button\n                          className=\"action-btn complete\"\n                          onClick={() => handleTripAction(trip, 'completed')}\n                            >\n                          <Square size={16} />\n                          Complete\n                            </button>\n                        )}\n                      </div>\n                  </td>\n                </tr>\n              )) : (\n                <tr>\n                  <td colSpan=\"9\" className=\"no-data\">\n                    <div className=\"empty-state\">\n                      <Calendar size={48} />\n                      <h3>No trips found</h3>\n                      <p>No trips match your search criteria</p>\n                  </div>\n                </td>\n              </tr>\n              )}\n          </tbody>\n        </table>\n        </div>\n      </div>\n\n      {/* Add Trip Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowAddModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Schedule New Trip</h2>\n              <button className=\"modal-close\" onClick={() => setShowAddModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                <label>Route</label>\n                    <select\n                  value={newTrip.routeId}\n                  onChange={(e) => setNewTrip({...newTrip, routeId: e.target.value})}\n                    >\n                      <option value=\"\">Select Route</option>\n                  <option value=\"route1\">Kochi to Thiruvananthapuram</option>\n                  <option value=\"route2\">Kochi to Kozhikode</option>\n                    </select>\n                  </div>\n                    <div className=\"form-group\">\n                <label>Bus</label>\n                      <select\n                  value={newTrip.busId}\n                  onChange={(e) => setNewTrip({...newTrip, busId: e.target.value})}\n                      >\n                        <option value=\"\">Select Bus</option>\n                  <option value=\"bus1\">KL-76-AB-5114</option>\n                  <option value=\"bus2\">KL-76-AB-5115</option>\n                      </select>\n                    </div>\n              <div className=\"form-row\">\n                    <div className=\"form-group\">\n                  <label>Driver</label>\n                      <select\n                    value={newTrip.driverId}\n                    onChange={(e) => setNewTrip({...newTrip, driverId: e.target.value})}\n                      >\n                        <option value=\"\">Select Driver</option>\n                    <option value=\"driver1\">Rajesh Kumar</option>\n                    <option value=\"driver2\">Manoj Pillai</option>\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                  <label>Conductor</label>\n                      <select\n                    value={newTrip.conductorId}\n                    onChange={(e) => setNewTrip({...newTrip, conductorId: e.target.value})}\n                      >\n                        <option value=\"\">Select Conductor</option>\n                    <option value=\"conductor1\">Suresh Nair</option>\n                    <option value=\"conductor2\">Anil Kumar</option>\n                      </select>\n                    </div>\n                  </div>\n                    <div className=\"form-group\">\n                <label>Service Date</label>\n                <input\n                  type=\"date\"\n                  value={newTrip.serviceDate}\n                  onChange={(e) => setNewTrip({...newTrip, serviceDate: e.target.value})}\n                      />\n                    </div>\n              <div className=\"form-row\">\n                    <div className=\"form-group\">\n                  <label>Start Time</label>\n                  <input\n                    type=\"time\"\n                    value={newTrip.startTime}\n                    onChange={(e) => setNewTrip({...newTrip, startTime: e.target.value})}\n                      />\n                    </div>\n                  <div className=\"form-group\">\n                  <label>End Time</label>\n                    <input\n                    type=\"time\"\n                    value={newTrip.endTime}\n                    onChange={(e) => setNewTrip({...newTrip, endTime: e.target.value})}\n                  />\n                  </div>\n              </div>\n                  <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  value={newTrip.status}\n                  onChange={(e) => setNewTrip({...newTrip, status: e.target.value})}\n                >\n                  <option value=\"scheduled\">Scheduled</option>\n                  <option value=\"running\">Running</option>\n                  <option value=\"completed\">Completed</option>\n                </select>\n                  </div>\n                </div>\n              <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowAddModal(false)}>\n                Cancel\n                </button>\n              <button className=\"btn btn-primary\" onClick={handleAddTrip}>\n                    Schedule Trip\n                  </button>\n              </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Trip Modal */}\n      {showEditModal && selectedTrip && (\n        <div className=\"modal-overlay\" onClick={() => setShowEditModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Edit Trip</h2>\n              <button className=\"modal-close\" onClick={() => setShowEditModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n                <div className=\"form-group\">\n                <label>Trip Number</label>\n                <input\n                  type=\"text\"\n                  value={selectedTrip.tripNumber}\n                  onChange={(e) => setSelectedTrip({...selectedTrip, tripNumber: e.target.value})}\n                  disabled\n                />\n                </div>\n                <div className=\"form-group\">\n                <label>Route</label>\n                <input\n                  type=\"text\"\n                  value={selectedTrip.routeId?.routeName}\n                  disabled\n                />\n                </div>\n                <div className=\"form-group\">\n                <label>Bus</label>\n                <input\n                  type=\"text\"\n                  value={selectedTrip.busId?.busNumber}\n                  disabled\n                />\n                </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Driver</label>\n                  <input\n                    type=\"text\"\n                    value={selectedTrip.driverId?.name}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Conductor</label>\n                  <input\n                    type=\"text\"\n                    value={selectedTrip.conductorId?.name}\n                    disabled\n                  />\n                </div>\n              </div>\n                <div className=\"form-group\">\n                <label>Service Date</label>\n                  <input\n                  type=\"date\"\n                  value={selectedTrip.serviceDate}\n                  onChange={(e) => setSelectedTrip({...selectedTrip, serviceDate: e.target.value})}\n                  />\n                </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Start Time</label>\n                  <input\n                    type=\"time\"\n                    value={selectedTrip.startTime}\n                    onChange={(e) => setSelectedTrip({...selectedTrip, startTime: e.target.value})}\n                  />\n                </div>\n              <div className=\"form-group\">\n                  <label>End Time</label>\n                  <input\n                    type=\"time\"\n                    value={selectedTrip.endTime}\n                    onChange={(e) => setSelectedTrip({...selectedTrip, endTime: e.target.value})}\n                />\n              </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  value={selectedTrip.status}\n                  onChange={(e) => setSelectedTrip({...selectedTrip, status: e.target.value})}\n                >\n                  <option value=\"scheduled\">Scheduled</option>\n                  <option value=\"running\">Running</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                </select>\n              </div>\n            </div>\n              <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowEditModal(false)}>\n                  Cancel\n                </button>\n              <button className=\"btn btn-primary\" onClick={handleEditTrip}>\n                Save Changes\n                </button>\n              </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Trip Modal */}\n      {showDeleteModal && selectedTrip && (\n        <div className=\"modal-overlay\" onClick={() => setShowDeleteModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Delete Trip</h2>\n              <button className=\"modal-close\" onClick={() => setShowDeleteModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"delete-confirmation\">\n                <AlertCircle size={48} className=\"warning-icon\" />\n                <h3>Are you sure?</h3>\n                <p>You are about to delete the trip <strong>{selectedTrip.tripNumber}</strong>. This action cannot be undone.</p>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowDeleteModal(false)}>\n                Cancel\n              </button>\n              <button className=\"btn btn-danger\" onClick={handleDeleteTrip}>\n                Delete Trip\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TripManagement;"],"names":["TripManagement","_selectedTrip$routeId","_selectedTrip$busId","_selectedTrip$driverI","_selectedTrip$conduct","trips","setTrips","useState","loading","setLoading","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","selectedTrip","setSelectedTrip","searchTerm","setSearchTerm","statusFilter","setStatusFilter","newTrip","setNewTrip","routeId","busId","driverId","conductorId","serviceDate","startTime","endTime","status","useEffect","fetchTrips","socket","io","process","REACT_APP_SOCKET_URL","auth","token","localStorage","getItem","userType","on","data","console","log","prevTrips","map","trip","_id","tripId","_objectSpread","updates","close","async","response","tripApiService","getTrips","tripsData","success","Array","isArray","length","tripNumber","routeName","routeNumber","busNumber","registrationNumber","name","fare","error","handleTripAction","action","updatedTrips","t","filteredTrips","filter","_trip$tripNumber","_trip$routeId","_trip$routeId$routeNa","_trip$busId","_trip$busId$busNumber","_trip$driverId","_trip$driverId$name","matchesSearch","toLowerCase","includes","matchesStatus","_jsx","className","children","_jsxs","onClick","Plus","size","Calendar","Play","Clock","Search","type","placeholder","value","onChange","e","target","index","_trip$routeId2","_trip$routeId3","_trip$busId2","_trip$driverId2","_trip$conductorId","_trip$status","_trip$status2","Bus","Date","toLocaleDateString","concat","charAt","toUpperCase","slice","Eye","Edit","Square","colSpan","stopPropagation","X","tripData","now","String","padStart","disabled","AlertCircle"],"sourceRoot":""}