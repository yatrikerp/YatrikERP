{"version":3,"file":"static/js/806.70685b3e.chunk.js","mappings":"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","sources":["pages/depot/components/ReportsAnalytics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../context/AuthContext';\nimport { reportsApiService } from '../../../services/depotApiService';\nimport './ManagementPages.css';\nimport { \n  Download, \n  Calendar,\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Users,\n  Bus,\n  MapPin,\n  BarChart3,\n  PieChart,\n  FileText\n} from 'lucide-react';\n\nconst ReportsAnalytics = () => {\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedReport, setSelectedReport] = useState('revenue');\n  const [dateRange, setDateRange] = useState('7d');\n  const [reportData, setReportData] = useState({\n    revenue: {\n      total: 125000,\n      today: 8500,\n      growth: 12.5,\n      trend: 'up'\n    },\n    bookings: {\n      total: 450,\n      today: 25,\n      growth: 8.3,\n      trend: 'up'\n    },\n    trips: {\n      total: 120,\n      today: 8,\n      growth: -2.1,\n      trend: 'down'\n    },\n    passengers: {\n      total: 1250,\n      today: 85,\n      growth: 15.2,\n      trend: 'up'\n    }\n  });\n\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  const fetchReports = async () => {\n    try {\n      setLoading(true);\n      const response = await reportsApiService.getReports();\n      console.log('Reports & Analytics - API response:', response);\n      \n      // Handle different response structures\n      let reportsData = [];\n      if (response.success && response.data) {\n        reportsData = Array.isArray(response.data) ? response.data : response.data.reports || [];\n      } else if (Array.isArray(response)) {\n        reportsData = response;\n      } else if (response.reports) {\n        reportsData = response.reports;\n      }\n      \n      console.log('Reports & Analytics - Parsed reports:', reportsData);\n      \n      // If no reports found, provide sample data\n      if (reportsData.length === 0) {\n        const sampleReports = [\n          {\n            _id: 'report1',\n            reportName: 'Daily Revenue Report',\n            reportType: 'revenue',\n            generatedDate: '2024-01-15',\n            period: '2024-01-15',\n            status: 'completed',\n            fileSize: '2.5 MB'\n          },\n          {\n            _id: 'report2',\n            reportName: 'Monthly Booking Analysis',\n            reportType: 'bookings',\n            generatedDate: '2024-01-14',\n            period: '2024-01',\n            status: 'completed',\n            fileSize: '1.8 MB'\n          },\n          {\n            _id: 'report3',\n            reportName: 'Trip Performance Report',\n            reportType: 'trips',\n            generatedDate: '2024-01-13',\n            period: '2024-01-01 to 2024-01-13',\n            status: 'completed',\n            fileSize: '3.2 MB'\n          }\n        ];\n        setReports(sampleReports);\n      } else {\n        setReports(reportsData);\n      }\n    } catch (error) {\n      console.error('Error fetching reports in ReportsAnalytics:', error);\n      // Provide sample data even on error\n      const sampleReports = [\n        {\n          _id: 'report1',\n          reportName: 'Daily Revenue Report',\n          reportType: 'revenue',\n          generatedDate: '2024-01-15',\n          period: '2024-01-15',\n          status: 'completed',\n          fileSize: '2.5 MB'\n        }\n      ];\n      setReports(sampleReports);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateReport = async (reportType) => {\n    try {\n      // Generate report logic here\n      const newReport = {\n        _id: `report_${Date.now()}`,\n        reportName: `${reportType.charAt(0).toUpperCase() + reportType.slice(1)} Report`,\n        reportType: reportType,\n        generatedDate: new Date().toISOString().split('T')[0],\n        period: dateRange,\n        status: 'completed',\n        fileSize: '2.1 MB'\n      };\n      \n      setReports([newReport, ...reports]);\n    } catch (error) {\n      console.error('Error generating report:', error);\n    }\n  };\n\n  const downloadReport = (report) => {\n    // Download report logic here\n    console.log('Downloading report:', report.reportName);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"reports-analytics\">\n        <div className=\"page-header\">\n          <h1>Reports & Analytics</h1>\n          <p>Loading reports...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"reports-analytics\">\n      {/* Page Header */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>Reports & Analytics</h1>\n            <p>Generate and view comprehensive reports and analytics</p>\n          </div>\n          <div className=\"header-actions\">\n            <select\n              value={dateRange}\n              onChange={(e) => setDateRange(e.target.value)}\n              className=\"date-range-select\"\n            >\n              <option value=\"1d\">Last 24 Hours</option>\n              <option value=\"7d\">Last 7 Days</option>\n              <option value=\"30d\">Last 30 Days</option>\n              <option value=\"90d\">Last 90 Days</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"metrics-grid\">\n        <div className=\"metric-card\">\n          <div className=\"metric-icon blue\">\n            <DollarSign size={24} />\n          </div>\n          <div className=\"metric-content\">\n            <h3>Total Revenue</h3>\n            <div className=\"metric-value\">₹{reportData.revenue.total.toLocaleString()}</div>\n            <div className={`metric-change ${reportData.revenue.trend}`}>\n              {reportData.revenue.trend === 'up' ? <TrendingUp size={16} /> : <TrendingDown size={16} />}\n              <span>{reportData.revenue.growth}%</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-icon green\">\n            <Users size={24} />\n          </div>\n          <div className=\"metric-content\">\n            <h3>Total Bookings</h3>\n            <div className=\"metric-value\">{reportData.bookings.total}</div>\n            <div className={`metric-change ${reportData.bookings.trend}`}>\n              {reportData.bookings.trend === 'up' ? <TrendingUp size={16} /> : <TrendingDown size={16} />}\n              <span>{reportData.bookings.growth}%</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-icon yellow\">\n            <Bus size={24} />\n          </div>\n          <div className=\"metric-content\">\n            <h3>Total Trips</h3>\n            <div className=\"metric-value\">{reportData.trips.total}</div>\n            <div className={`metric-change ${reportData.trips.trend}`}>\n              {reportData.trips.trend === 'up' ? <TrendingUp size={16} /> : <TrendingDown size={16} />}\n              <span>{reportData.trips.growth}%</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"metric-card\">\n          <div className=\"metric-icon purple\">\n            <MapPin size={24} />\n          </div>\n          <div className=\"metric-content\">\n            <h3>Total Passengers</h3>\n            <div className=\"metric-value\">{reportData.passengers.total}</div>\n            <div className={`metric-change ${reportData.passengers.trend}`}>\n              {reportData.passengers.trend === 'up' ? <TrendingUp size={16} /> : <TrendingDown size={16} />}\n              <span>{reportData.passengers.growth}%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Report Generation */}\n      <div className=\"report-generation\">\n        <h3>Generate Reports</h3>\n        <div className=\"report-types\">\n          <button \n            className={`report-type-btn ${selectedReport === 'revenue' ? 'active' : ''}`}\n            onClick={() => setSelectedReport('revenue')}\n          >\n            <DollarSign size={20} />\n            Revenue Report\n          </button>\n          <button \n            className={`report-type-btn ${selectedReport === 'bookings' ? 'active' : ''}`}\n            onClick={() => setSelectedReport('bookings')}\n          >\n            <Users size={20} />\n            Booking Report\n          </button>\n          <button \n            className={`report-type-btn ${selectedReport === 'trips' ? 'active' : ''}`}\n            onClick={() => setSelectedReport('trips')}\n          >\n            <Bus size={20} />\n            Trip Report\n          </button>\n          <button \n            className={`report-type-btn ${selectedReport === 'performance' ? 'active' : ''}`}\n            onClick={() => setSelectedReport('performance')}\n          >\n            <BarChart3 size={20} />\n            Performance Report\n          </button>\n        </div>\n        <button \n          className=\"generate-report-btn\"\n          onClick={() => generateReport(selectedReport)}\n        >\n          <FileText size={20} />\n          Generate {selectedReport.charAt(0).toUpperCase() + selectedReport.slice(1)} Report\n        </button>\n      </div>\n\n      {/* Reports List */}\n      <div className=\"reports-list\">\n        <div className=\"table-header\">\n          <h3>Generated Reports ({reports.length})</h3>\n        </div>\n        <div className=\"table-wrapper\">\n          <table className=\"reports-table\">\n            <thead>\n              <tr>\n                <th>Report Name</th>\n                <th>Type</th>\n                <th>Period</th>\n                <th>Generated Date</th>\n                <th>Status</th>\n                <th>File Size</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {reports.length > 0 ? reports.map((report, index) => (\n                <tr key={report._id || index}>\n                  <td>\n                    <div className=\"report-name\">\n                      <FileText size={16} />\n                      <span>{report.reportName}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <span className=\"report-type-badge\">\n                      {report.reportType?.charAt(0).toUpperCase() + report.reportType?.slice(1)}\n                    </span>\n                  </td>\n                  <td>\n                    <div className=\"report-period\">\n                      <Calendar size={16} />\n                      <span>{report.period}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <span>{new Date(report.generatedDate).toLocaleDateString()}</span>\n                  </td>\n                  <td>\n                    <span className={`status-badge ${report.status || 'unknown'}`}>\n                      {report.status?.charAt(0).toUpperCase() + report.status?.slice(1)}\n                    </span>\n                  </td>\n                  <td>\n                    <span>{report.fileSize}</span>\n                  </td>\n                  <td>\n                    <div className=\"action-buttons\">\n                      <button \n                        className=\"action-btn download\"\n                        onClick={() => downloadReport(report)}\n                      >\n                        <Download size={16} />\n                        Download\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              )) : (\n                <tr>\n                  <td colSpan=\"7\" className=\"no-data\">\n                    <div className=\"empty-state\">\n                      <FileText size={48} />\n                      <h3>No reports found</h3>\n                      <p>Generate your first report to get started</p>\n                    </div>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Analytics Charts Placeholder */}\n      <div className=\"analytics-charts\">\n        <h3>Analytics Dashboard</h3>\n        <div className=\"charts-grid\">\n          <div className=\"chart-placeholder\">\n            <BarChart3 size={48} />\n            <h4>Revenue Trend</h4>\n            <p>Revenue analysis over time</p>\n          </div>\n          <div className=\"chart-placeholder\">\n            <PieChart size={48} />\n            <h4>Route Performance</h4>\n            <p>Performance by route</p>\n          </div>\n          <div className=\"chart-placeholder\">\n            <TrendingUp size={48} />\n            <h4>Booking Trends</h4>\n            <p>Booking patterns analysis</p>\n          </div>\n          <div className=\"chart-placeholder\">\n            <Bus size={48} />\n            <h4>Fleet Utilization</h4>\n            <p>Bus utilization rates</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportsAnalytics;"],"names":["ReportsAnalytics","reports","setReports","useState","loading","setLoading","selectedReport","setSelectedReport","dateRange","setDateRange","reportData","setReportData","revenue","total","today","growth","trend","bookings","trips","passengers","useEffect","fetchReports","async","response","reportsApiService","getReports","console","log","reportsData","success","data","Array","isArray","length","_id","reportName","reportType","generatedDate","period","status","fileSize","error","_jsx","className","children","_jsxs","value","onChange","e","target","DollarSign","size","toLocaleString","concat","TrendingUp","TrendingDown","Users","Bus","MapPin","onClick","BarChart3","newReport","Date","now","charAt","toUpperCase","slice","toISOString","split","generateReport","FileText","map","report","index","_report$reportType","_report$reportType2","_report$status","_report$status2","Calendar","toLocaleDateString","downloadReport","Download","colSpan","PieChart"],"sourceRoot":""}