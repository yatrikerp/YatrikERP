{"version":3,"file":"static/js/403.1f8dcebc.chunk.js","mappings":"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","sources":["pages/depot/components/RouteManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { routeApiService } from '../../../services/depotApiService';\nimport './ManagementPages.css';\nimport { \n  Plus, \n  Search, \n  Trash2, \n  Route,\n  CheckCircle,\n  AlertCircle,\n  X,\n  Download,\n  Upload,\n  RefreshCw,\n  BarChart3,\n  Star,\n  MoreVertical,\n  ChevronDown,\n  ChevronUp,\n  Loader2,\n  Target,\n  Activity\n} from 'lucide-react';\n\nconst RouteManagement = () => {\n  // Core state\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  \n  // Modal states\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  \n  // Selection and editing\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [selectedRoutes, setSelectedRoutes] = useState([]);\n  \n  // Search and filters\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [distanceFilter, setDistanceFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('routeName');\n  const [sortOrder, setSortOrder] = useState('asc');\n  \n  // Analytics\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  \n  // New route form\n  const [newRoute, setNewRoute] = useState({\n    routeNumber: '',\n    routeName: '',\n    startingPoint: '',\n    endingPoint: '',\n    totalDistance: '',\n    estimatedDuration: '',\n    baseFare: '',\n    status: 'active',\n    description: '',\n    stops: [],\n    amenities: [],\n    frequency: 'hourly',\n    capacity: 50\n  });\n  \n  // Advanced features\n  const [isBulkMode, setIsBulkMode] = useState(false);\n  \n  // Real-time updates\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [connectionStatus] = useState('connected');\n\n  useEffect(() => {\n    fetchRoutes();\n    \n    // Set up real-time updates\n    const interval = setInterval(() => {\n      setLastUpdated(new Date());\n    }, 30000); // Update every 30 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Computed properties with useMemo for performance\n  const routeStats = useMemo(() => {\n    const totalRoutes = routes.length;\n    const activeRoutes = routes.filter(route => route.status === 'active').length;\n    const totalDistance = routes.reduce((sum, route) => sum + (route.totalDistance || 0), 0);\n    const averageFare = routes.length > 0 \n      ? routes.reduce((sum, route) => sum + (route.baseFare || 0), 0) / routes.length \n      : 0;\n    const popularRoutes = routes\n      .sort((a, b) => (b.popularity || 0) - (a.popularity || 0))\n      .slice(0, 3);\n    \n    return {\n      totalRoutes,\n      activeRoutes,\n      totalDistance,\n      averageFare,\n      popularRoutes,\n      inactiveRoutes: totalRoutes - activeRoutes\n    };\n  }, [routes]);\n\n  // Enhanced filtered and sorted routes\n  const filteredRoutes = useMemo(() => {\n    let filtered = routes.filter(route => {\n      const matchesSearch = route.routeName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           route.routeNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           route.startingPoint.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           route.endingPoint.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesStatus = statusFilter === 'all' || route.status === statusFilter;\n      \n      const matchesDistance = (() => {\n        if (distanceFilter === 'all') return true;\n        const distance = route.totalDistance || 0;\n        switch (distanceFilter) {\n          case 'short': return distance < 100;\n          case 'medium': return distance >= 100 && distance <= 300;\n          case 'long': return distance > 300;\n          default: return true;\n        }\n      })();\n      \n      return matchesSearch && matchesStatus && matchesDistance;\n    });\n\n    // Sort routes\n    filtered.sort((a, b) => {\n      let aVal = a[sortBy];\n      let bVal = b[sortBy];\n      \n      if (typeof aVal === 'string') {\n        aVal = aVal.toLowerCase();\n        bVal = bVal.toLowerCase();\n      }\n      \n      if (sortOrder === 'asc') {\n        return aVal > bVal ? 1 : -1;\n      } else {\n        return aVal < bVal ? 1 : -1;\n      }\n    });\n\n    return filtered;\n  }, [routes, searchTerm, statusFilter, distanceFilter, sortBy, sortOrder]);\n\n  const fetchRoutes = async () => {\n    try {\n      setLoading(true);\n      const response = await routeApiService.getRoutes();\n      console.log('Route Management - API response:', response);\n      \n      // Handle different response structures\n      let routesData = [];\n      if (response.success && response.data) {\n        routesData = Array.isArray(response.data) ? response.data : response.data.routes || [];\n      } else if (Array.isArray(response)) {\n        routesData = response;\n      } else if (response.routes) {\n        routesData = response.routes;\n      }\n      \n      console.log('Route Management - Parsed routes:', routesData);\n      \n      // If no routes found, provide enhanced sample data\n      if (routesData.length === 0) {\n        const sampleRoutes = [\n          {\n            _id: 'route_7dfe62',\n            routeNumber: 'RT1001',\n            routeName: 'National Express',\n            routeId: '7dfe62',\n            startingPoint: 'Kochi Central',\n            endingPoint: 'Thiruvananthapuram Central',\n            totalDistance: 220,\n            estimatedDuration: '4h 30m',\n            baseFare: 450,\n            status: 'active',\n            description: 'Premium express service connecting major cities',\n            popularity: 95,\n            rating: 4.8,\n            amenities: ['AC', 'WiFi', 'Charging Points', 'Snacks'],\n            frequency: 'Every 30 minutes',\n            capacity: 50,\n            stops: ['Alleppey', 'Kollam', 'Varkala'],\n            lastUpdated: new Date(),\n            bookings: 1250,\n            revenue: 562500,\n            totalStops: 8,\n            routeType: 'Express',\n            busType: 'AC Seater',\n            lastMaintenance: '2024-01-15',\n            nextMaintenance: '2024-02-15',\n            assignedBuses: ['KL-76-AB-5114', 'KL-76-BC-9076'],\n            driver: 'Rajesh Kumar',\n            conductor: 'Joel',\n            crewStatus: 'assigned'\n          },\n          {\n            _id: 'route_7dfe64',\n            routeNumber: 'RT1002',\n            routeName: 'Kochi to Kozhikode',\n            routeId: '7dfe64',\n            startingPoint: 'Kochi Central',\n            endingPoint: 'Kozhikode Central',\n            totalDistance: 185,\n            estimatedDuration: '3h 45m',\n            baseFare: 380,\n            status: 'active',\n            description: 'Fast intercity connection with scenic views',\n            popularity: 88,\n            rating: 4.6,\n            amenities: ['AC', 'WiFi', 'Refreshments'],\n            frequency: 'Every 45 minutes',\n            capacity: 45,\n            stops: ['Thrissur', 'Palakkad', 'Malappuram'],\n            lastUpdated: new Date(),\n            bookings: 980,\n            revenue: 372400,\n            totalStops: 6,\n            routeType: 'Semi-Express',\n            busType: 'AC Sleeper',\n            lastMaintenance: '2024-01-10',\n            nextMaintenance: '2024-02-10',\n            assignedBuses: ['KL-76-CD-9722'],\n            driver: 'Nidhin Shijo',\n            conductor: 'Rajesh Kumar',\n            crewStatus: 'assigned'\n          },\n          {\n            _id: 'route_7dfe66',\n            routeNumber: 'RT1003',\n            routeName: 'Mumbai-Nagpur Direct',\n            routeId: '7dfe66',\n            startingPoint: 'Mumbai Central',\n            endingPoint: 'Nagpur Central',\n            totalDistance: 850,\n            estimatedDuration: '12h 30m',\n            baseFare: 1200,\n            status: 'maintenance',\n            description: 'Long distance overnight service',\n            popularity: 82,\n            rating: 4.4,\n            amenities: ['AC', 'WiFi', 'Refreshments', 'Restroom'],\n            frequency: 'Daily 2 trips',\n            capacity: 40,\n            stops: ['Pune', 'Aurangabad', 'Akola'],\n            lastUpdated: new Date(),\n            bookings: 750,\n            revenue: 900000,\n            totalStops: 5,\n            routeType: 'Deluxe',\n            busType: 'AC Sleeper',\n            lastMaintenance: '2024-01-20',\n            nextMaintenance: '2024-01-25',\n            assignedBuses: ['KL-76-EF-1234'],\n            driver: 'Ramesh Kumar',\n            conductor: 'Suresh Kumar',\n            crewStatus: 'maintenance'\n          },\n          {\n            _id: 'route_7dfe68',\n            routeNumber: 'RT1004',\n            routeName: 'Mountain Express',\n            routeId: '7dfe68',\n            startingPoint: 'Munnar',\n            endingPoint: 'Kochi',\n            totalDistance: 130,\n            estimatedDuration: '3h 15m',\n            baseFare: 320,\n            status: 'active',\n            description: 'Picturesque mountain route with scenic views',\n            popularity: 75,\n            rating: 4.7,\n            amenities: ['AC', 'WiFi', 'Scenic Views'],\n            frequency: 'Every 2 hours',\n            capacity: 35,\n            stops: ['Devikulam', 'Mattupetty', 'Top Station'],\n            lastUpdated: new Date(),\n            bookings: 420,\n            revenue: 134400,\n            totalStops: 4,\n            routeType: 'Tourist',\n            busType: 'Non-AC Seater',\n            lastMaintenance: '2024-01-12',\n            nextMaintenance: '2024-02-12',\n            assignedBuses: ['KL-76-GH-5678'],\n            driver: 'Assign',\n            conductor: 'Assign',\n            crewStatus: 'unassigned'\n          },\n          {\n            _id: 'route_7dfe70',\n            routeNumber: 'RT1005',\n            routeName: 'Coastal Highway',\n            routeId: '7dfe70',\n            startingPoint: 'Kannur',\n            endingPoint: 'Kochi',\n            totalDistance: 280,\n            estimatedDuration: '5h 30m',\n            baseFare: 520,\n            status: 'inactive',\n            description: 'Long coastal journey with multiple stops',\n            popularity: 65,\n            rating: 4.2,\n            amenities: ['AC', 'WiFi', 'Refreshments'],\n            frequency: 'Every 90 minutes',\n            capacity: 50,\n            stops: ['Thalassery', 'Kozhikode', 'Thrissur'],\n            lastUpdated: new Date(),\n            bookings: 320,\n            revenue: 166400,\n            totalStops: 7,\n            routeType: 'Regular',\n            busType: 'AC Seater',\n            lastMaintenance: '2024-01-08',\n            nextMaintenance: '2024-02-08',\n            assignedBuses: [],\n            driver: 'N/A',\n            conductor: 'N/A',\n            crewStatus: 'unassigned'\n          },\n          {\n            _id: 'route_7dfe72',\n            routeNumber: 'RT1006',\n            routeName: 'Bangalore Express',\n            routeId: '7dfe72',\n            startingPoint: 'Bangalore',\n            endingPoint: 'Chennai',\n            totalDistance: 350,\n            estimatedDuration: '6h 15m',\n            baseFare: 650,\n            status: 'active',\n            description: 'High-speed interstate connection',\n            popularity: 92,\n            rating: 4.9,\n            amenities: ['AC', 'WiFi', 'Charging Points', 'Meals'],\n            frequency: 'Every 2 hours',\n            capacity: 48,\n            stops: ['Kolar', 'Vellore', 'Kanchipuram'],\n            lastUpdated: new Date(),\n            bookings: 1100,\n            revenue: 715000,\n            totalStops: 6,\n            routeType: 'Premium',\n            busType: 'AC Seater',\n            lastMaintenance: '2024-01-18',\n            nextMaintenance: '2024-02-18',\n            assignedBuses: ['KL-76-IJ-9012'],\n            driver: 'Vijay Kumar',\n            conductor: 'Manoj Kumar',\n            crewStatus: 'assigned'\n          }\n        ];\n        setRoutes(sampleRoutes);\n      } else {\n        setRoutes(routesData);\n      }\n    } catch (error) {\n      console.error('Error fetching routes in RouteManagement:', error);\n      // Provide sample data even on error\n      const sampleRoutes = [\n        {\n          _id: 'sample1',\n          routeNumber: 'KL-001',\n          routeName: 'Kochi to Thiruvananthapuram',\n          startingPoint: 'Kochi',\n          endingPoint: 'Thiruvananthapuram',\n          totalDistance: 220,\n          estimatedDuration: '4h 30m',\n          baseFare: 450,\n          status: 'active'\n        }\n      ];\n      setRoutes(sampleRoutes);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modern callback functions with useCallback for performance\n  const handleAddRoute = useCallback(async () => {\n    try {\n      setLoading(true);\n      const routeData = {\n        ...newRoute,\n        _id: `route_${Date.now()}`,\n        totalDistance: parseInt(newRoute.totalDistance),\n        baseFare: parseInt(newRoute.baseFare),\n        popularity: Math.floor(Math.random() * 100),\n        rating: 4.0 + Math.random() * 1,\n        bookings: 0,\n        revenue: 0,\n        lastUpdated: new Date()\n      };\n      \n      setRoutes(prev => [...prev, routeData]);\n      setShowAddModal(false);\n      setNewRoute({\n        routeNumber: '',\n        routeName: '',\n        startingPoint: '',\n        endingPoint: '',\n        totalDistance: '',\n        estimatedDuration: '',\n        baseFare: '',\n        status: 'active',\n        description: '',\n        stops: [],\n        amenities: [],\n        frequency: 'hourly',\n        capacity: 50\n      });\n    } catch (error) {\n      console.error('Error adding route:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [newRoute]);\n\n  const handleEditRoute = useCallback(async () => {\n    try {\n      setLoading(true);\n      const updatedRoutes = routes.map(route => \n        route._id === selectedRoute._id \n          ? { ...route, ...selectedRoute, lastUpdated: new Date() } \n          : route\n      );\n      setRoutes(updatedRoutes);\n      setShowEditModal(false);\n      setSelectedRoute(null);\n    } catch (error) {\n      console.error('Error editing route:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedRoute, routes]);\n\n  const handleDeleteRoute = useCallback(async () => {\n    try {\n      setLoading(true);\n      const updatedRoutes = routes.filter(route => route._id !== selectedRoute._id);\n      setRoutes(updatedRoutes);\n      setShowDeleteModal(false);\n      setSelectedRoute(null);\n    } catch (error) {\n      console.error('Error deleting route:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedRoute, routes]);\n\n  const handleBulkDelete = useCallback(async () => {\n    try {\n      setLoading(true);\n      const updatedRoutes = routes.filter(route => !selectedRoutes.includes(route._id));\n      setRoutes(updatedRoutes);\n      setSelectedRoutes([]);\n      setIsBulkMode(false);\n    } catch (error) {\n      console.error('Error bulk deleting routes:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedRoutes, routes]);\n\n  const handleRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await fetchRoutes();\n    setRefreshing(false);\n  }, []);\n\n  const handleSort = useCallback((column) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(column);\n      setSortOrder('asc');\n    }\n  }, [sortBy, sortOrder]);\n\n  const handleRouteSelect = useCallback((route, checked) => {\n    if (checked) {\n      setSelectedRoutes(prev => [...prev, route._id]);\n    } else {\n      setSelectedRoutes(prev => prev.filter(id => id !== route._id));\n    }\n  }, []);\n\n  const handleSelectAll = useCallback((checked) => {\n    if (checked) {\n      setSelectedRoutes(filteredRoutes.map(route => route._id));\n    } else {\n      setSelectedRoutes([]);\n    }\n  }, [filteredRoutes]);\n\n  // Remove old filteredRoutes definition as it's now computed with useMemo above\n\n  if (loading) {\n    return (\n      <div className=\"route-management\">\n        <div className=\"page-header\">\n          <div className=\"header-content\">\n            <div className=\"header-text\">\n              <h1>Route Management</h1>\n              <p>Loading routes...</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"loading-container\">\n          <Loader2 className=\"animate-spin\" size={48} />\n          <p>Fetching route data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"route-management modern-ui\">\n      {/* Enhanced Page Header */}\n      <div className=\"page-header enhanced\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <div className=\"header-title\">\n              <h1>\n                <Route className=\"header-icon\" size={32} />\n                Route Management\n              </h1>\n              <div className=\"header-subtitle\">\n                <p>Manage bus routes, stops, and route information with advanced analytics</p>\n                <div className=\"header-meta\">\n                  <span className=\"last-updated\">\n                    <Activity size={14} />\n                    Last updated: {lastUpdated.toLocaleTimeString()}\n                  </span>\n                  <span className={`connection-status ${connectionStatus}`}>\n                    <div className=\"status-indicator\"></div>\n                    {connectionStatus === 'connected' ? 'Live' : 'Offline'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"header-actions\">\n            <div className=\"action-group\">\n              <button \n                className=\"action-btn secondary\"\n                onClick={handleRefresh}\n                disabled={refreshing}\n              >\n                <RefreshCw className={refreshing ? 'animate-spin' : ''} size={16} />\n                Refresh\n              </button>\n              <button \n                className=\"action-btn secondary\"\n                onClick={() => console.log('Import functionality coming soon')}\n              >\n                <Upload size={16} />\n                Import\n              </button>\n              <button \n                className=\"action-btn secondary\"\n                onClick={() => console.log('Export functionality coming soon')}\n              >\n                <Download size={16} />\n                Export\n              </button>\n              <button \n                className=\"action-btn primary\"\n                onClick={() => setShowAddModal(true)}\n              >\n                <Plus size={16} />\n                Add New Route\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Stats Grid - Fleet Management Style */}\n      <div className=\"stats-grid enhanced\">\n        <div className=\"stat-card primary\">\n          <div className=\"stat-icon-container\">\n            <div className=\"stat-icon blue\">\n              <Route size={24} />\n            </div>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Total Routes</h3>\n            <div className=\"stat-value\">{routeStats.totalRoutes}</div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card success\">\n          <div className=\"stat-icon-container\">\n            <div className=\"stat-icon green\">\n              <CheckCircle size={24} />\n            </div>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Active Routes</h3>\n            <div className=\"stat-value\">{routeStats.activeRoutes}</div>\n          </div>\n        </div>\n        \n        <div className=\"stat-card warning\">\n          <div className=\"stat-icon-container\">\n            <div className=\"stat-icon yellow\">\n              <AlertCircle size={24} />\n            </div>\n          </div>\n          <div className=\"stat-content\">\n            <h3>In Maintenance</h3>\n            <div className=\"stat-value\">\n              {routes.filter(route => route.status === 'maintenance').length}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"stat-card info\">\n          <div className=\"stat-icon-container\">\n            <div className=\"stat-icon purple\">\n              <BarChart3 size={24} />\n            </div>\n          </div>\n          <div className=\"stat-content\">\n            <h3>Active Trips</h3>\n            <div className=\"stat-value\">\n              {routes.filter(route => route.status === 'active' && route.assignedBuses?.length > 0).length}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Search and Filter Bar - Fleet Management Style */}\n      <div className=\"search-filter-bar enhanced\">\n        <div className=\"search-section\">\n          <div className=\"search-input-container\">\n            <Search size={20} className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search routes, registration, crew...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            {searchTerm && (\n              <button \n                className=\"clear-search\"\n                onClick={() => setSearchTerm('')}\n              >\n                <X size={16} />\n              </button>\n            )}\n          </div>\n          \n          <div className=\"filter-controls\">\n            <select\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"maintenance\">Maintenance</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n            \n            <select\n              value={distanceFilter}\n              onChange={(e) => setDistanceFilter(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"all\">All Types</option>\n              <option value=\"express\">Express</option>\n              <option value=\"semi-express\">Semi-Express</option>\n              <option value=\"regular\">Regular</option>\n              <option value=\"deluxe\">Deluxe</option>\n              <option value=\"tourist\">Tourist</option>\n            </select>\n            \n            <select className=\"filter-select\">\n              <option value=\"all\">All Crew Status</option>\n              <option value=\"assigned\">Assigned</option>\n              <option value=\"unassigned\">Unassigned</option>\n              <option value=\"maintenance\">Maintenance</option>\n            </select>\n            \n            <select className=\"filter-select\">\n              <option value=\"10\">10 per page</option>\n              <option value=\"25\">25 per page</option>\n              <option value=\"50\">50 per page</option>\n              <option value=\"100\">100 per page</option>\n            </select>\n          </div>\n        </div>\n        \n        <div className=\"view-controls\">\n          <div className=\"toggle-buttons\">\n            <button className={`toggle-btn ${statusFilter === 'all' ? 'active' : ''}`}>\n              All Routes\n            </button>\n            <button className={`toggle-btn ${statusFilter === 'active' ? 'active' : ''}`}>\n              Active Only\n            </button>\n            <button className=\"toggle-btn\">\n              <Star size={16} />\n            </button>\n          </div>\n          \n          <div className=\"bulk-actions\">\n            {isBulkMode && selectedRoutes.length > 0 && (\n              <div className=\"bulk-controls\">\n                <span className=\"selected-count\">\n                  {selectedRoutes.length} selected\n                </span>\n                <button \n                  className=\"bulk-action-btn danger\"\n                  onClick={handleBulkDelete}\n                >\n                  <Trash2 size={16} />\n                  Delete\n                </button>\n              </div>\n            )}\n            <button \n              className={`bulk-toggle ${isBulkMode ? 'active' : ''}`}\n              onClick={() => {\n                setIsBulkMode(!isBulkMode);\n                setSelectedRoutes([]);\n              }}\n            >\n              <Target size={16} />\n              Bulk Select\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Routes Table */}\n      <div className=\"routes-table-container enhanced\">\n        <div className=\"table-header\">\n          <div className=\"table-title\">\n            <h3>Routes ({filteredRoutes.length})</h3>\n            <div className=\"table-subtitle\">\n              <span>Showing {filteredRoutes.length} of {routes.length} routes</span>\n              {searchTerm && (\n                <span className=\"search-indicator\">\n                  Filtered by: \"{searchTerm}\"\n                </span>\n              )}\n            </div>\n          </div>\n          <div className=\"table-actions\">\n            <button \n              className=\"analytics-btn\"\n              onClick={() => setShowAnalytics(!showAnalytics)}\n            >\n              <BarChart3 size={16} />\n              Analytics\n            </button>\n          </div>\n        </div>\n        \n        {showAnalytics && (\n          <div className=\"analytics-panel\">\n            <div className=\"analytics-grid\">\n              <div className=\"analytics-card\">\n                <h4>Popular Routes</h4>\n                <div className=\"popular-routes\">\n                  {routeStats.popularRoutes.map((route, index) => (\n                    <div key={route._id} className=\"popular-route\">\n                      <span className=\"rank\">#{index + 1}</span>\n                      <span className=\"name\">{route.routeName}</span>\n                      <span className=\"popularity\">{route.popularity}%</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"analytics-card\">\n                <h4>Revenue Summary</h4>\n                <div className=\"revenue-stats\">\n                  <div className=\"revenue-item\">\n                    <span className=\"label\">Total Revenue</span>\n                    <span className=\"value\">\n                      ₹{routes.reduce((sum, route) => sum + (route.revenue || 0), 0).toLocaleString()}\n                    </span>\n                  </div>\n                  <div className=\"revenue-item\">\n                    <span className=\"label\">Avg. per Route</span>\n                    <span className=\"value\">\n                      ₹{Math.round(routes.reduce((sum, route) => sum + (route.revenue || 0), 0) / routes.length).toLocaleString()}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"table-wrapper\">\n          <table className=\"routes-table enhanced\">\n            <thead>\n              <tr>\n                {isBulkMode && (\n                  <th className=\"select-column\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedRoutes.length === filteredRoutes.length && filteredRoutes.length > 0}\n                      onChange={(e) => handleSelectAll(e.target.checked)}\n                    />\n                  </th>\n                )}\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('routeNumber')}\n                >\n                  ROUTE NUMBER\n                  {sortBy === 'routeNumber' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('routeName')}\n                >\n                  ROUTE NAME\n                  {sortBy === 'routeName' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('routeType')}\n                >\n                  TYPE\n                  {sortBy === 'routeType' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('capacity')}\n                >\n                  CAPACITY\n                  {sortBy === 'capacity' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('routeNumber')}\n                >\n                  ROUTE\n                  {sortBy === 'routeNumber' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('driver')}\n                >\n                  CREW ASSIGNMENT\n                  {sortBy === 'driver' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('status')}\n                >\n                  STATUS\n                  {sortBy === 'status' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th \n                  className=\"sortable\"\n                  onClick={() => handleSort('lastMaintenance')}\n                >\n                  LAST MAINTENANCE\n                  {sortBy === 'lastMaintenance' && (\n                    <span className=\"sort-indicator\">\n                      {sortOrder === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />}\n                    </span>\n                  )}\n                </th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredRoutes.length > 0 ? filteredRoutes.map((route, index) => (\n                <tr key={route._id || index} className=\"route-row\">\n                  {isBulkMode && (\n                    <td className=\"select-column\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRoutes.includes(route._id)}\n                        onChange={(e) => handleRouteSelect(route, e.target.checked)}\n                      />\n                    </td>\n                  )}\n                  <td>\n                    <div className=\"route-number\">\n                      <span className=\"number\">{route.routeNumber}</span>\n                      <span className=\"id\">ID: {route.routeId}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"route-name\">\n                      <span className=\"name\">{route.routeName}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"route-type\">\n                      <span className=\"type\">{route.routeType}</span>\n                      <span className=\"bus-type\">{route.busType}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"capacity\">\n                      <span>{route.capacity} ({route.capacity}S / 0SL)</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"route-info\">\n                      <span className=\"route-name\">{route.routeName}</span>\n                      <span className=\"route-id\">Route: {route.routeNumber}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"crew-assignment\">\n                      <div className=\"driver\">\n                        <span className=\"label\">Driver:</span>\n                        {route.driver === 'Assign' ? (\n                          <button className=\"assign-btn\">+ Assign</button>\n                        ) : (\n                          <span className=\"name\">{route.driver}</span>\n                        )}\n                      </div>\n                      <div className=\"conductor\">\n                        <span className=\"label\">Conductor:</span>\n                        {route.conductor === 'Assign' ? (\n                          <button className=\"assign-btn\">+ Assign</button>\n                        ) : (\n                          <span className=\"name\">{route.conductor}</span>\n                        )}\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"status-container\">\n                      <span className={`status-badge ${route.status || 'unknown'}`}>\n                        {route.status === 'active' ? 'ACTIVE' : \n                         route.status === 'maintenance' ? 'MAINTENANCE' : 'INACTIVE'}\n                      </span>\n                      {route.status === 'maintenance' && (\n                        <button className=\"status-action-btn\">\n                          <CheckCircle size={14} />\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"maintenance-info\">\n                      <span>{route.lastMaintenance || 'N/A'}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"action-buttons\">\n                      <button \n                        className=\"action-btn view\"\n                        onClick={() => {\n                          setSelectedRoute(route);\n                          console.log('View details for:', route.routeName);\n                        }}\n                        title=\"View Details\"\n                      >\n                        VIEW\n                      </button>\n                      <button \n                        className=\"action-btn edit\"\n                        onClick={() => {\n                          setSelectedRoute(route);\n                          setShowEditModal(true);\n                        }}\n                        title=\"Edit Route\"\n                      >\n                        EDIT\n                      </button>\n                      <button \n                        className=\"action-btn maintenance\"\n                        onClick={() => {\n                          setSelectedRoute(route);\n                          console.log('Maintenance for:', route.routeName);\n                        }}\n                        title=\"Maintenance\"\n                      >\n                        MAINTENANCE\n                      </button>\n                      <button \n                        className=\"action-btn more\"\n                        title=\"More Options\"\n                      >\n                        <MoreVertical size={16} />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              )) : (\n                <tr>\n                  <td colSpan={isBulkMode ? \"11\" : \"10\"} className=\"no-data\">\n                    <div className=\"empty-state\">\n                      <Route size={48} />\n                      <h3>No routes found</h3>\n                      <p>No routes match your search criteria</p>\n                      <button \n                        className=\"clear-filters-btn\"\n                        onClick={() => {\n                          setSearchTerm('');\n                          setStatusFilter('all');\n                          setDistanceFilter('all');\n                        }}\n                      >\n                        Clear Filters\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Add Route Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowAddModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Add New Route</h2>\n              <button className=\"modal-close\" onClick={() => setShowAddModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label>Route Number</label>\n                <input\n                  type=\"text\"\n                  value={newRoute.routeNumber}\n                  onChange={(e) => setNewRoute({...newRoute, routeNumber: e.target.value})}\n                  placeholder=\"e.g., KL-001\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Route Name</label>\n                <input\n                  type=\"text\"\n                  value={newRoute.routeName}\n                  onChange={(e) => setNewRoute({...newRoute, routeName: e.target.value})}\n                  placeholder=\"e.g., Kochi to Thiruvananthapuram\"\n                />\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Starting Point</label>\n                  <input\n                    type=\"text\"\n                    value={newRoute.startingPoint}\n                    onChange={(e) => setNewRoute({...newRoute, startingPoint: e.target.value})}\n                    placeholder=\"e.g., Kochi\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Ending Point</label>\n                  <input\n                    type=\"text\"\n                    value={newRoute.endingPoint}\n                    onChange={(e) => setNewRoute({...newRoute, endingPoint: e.target.value})}\n                    placeholder=\"e.g., Thiruvananthapuram\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Distance (km)</label>\n                  <input\n                    type=\"number\"\n                    value={newRoute.totalDistance}\n                    onChange={(e) => setNewRoute({...newRoute, totalDistance: e.target.value})}\n                    placeholder=\"e.g., 220\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Estimated Duration</label>\n                  <input\n                    type=\"text\"\n                    value={newRoute.estimatedDuration}\n                    onChange={(e) => setNewRoute({...newRoute, estimatedDuration: e.target.value})}\n                    placeholder=\"e.g., 4h 30m\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Base Fare (₹)</label>\n                <input\n                  type=\"number\"\n                  value={newRoute.baseFare}\n                  onChange={(e) => setNewRoute({...newRoute, baseFare: e.target.value})}\n                  placeholder=\"e.g., 450\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  value={newRoute.status}\n                  onChange={(e) => setNewRoute({...newRoute, status: e.target.value})}\n                >\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowAddModal(false)}>\n                Cancel\n              </button>\n              <button className=\"btn btn-primary\" onClick={handleAddRoute}>\n                Add Route\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Route Modal */}\n      {showEditModal && selectedRoute && (\n        <div className=\"modal-overlay\" onClick={() => setShowEditModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Edit Route</h2>\n              <button className=\"modal-close\" onClick={() => setShowEditModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label>Route Number</label>\n                <input\n                  type=\"text\"\n                  value={selectedRoute.routeNumber}\n                  onChange={(e) => setSelectedRoute({...selectedRoute, routeNumber: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Route Name</label>\n                <input\n                  type=\"text\"\n                  value={selectedRoute.routeName}\n                  onChange={(e) => setSelectedRoute({...selectedRoute, routeName: e.target.value})}\n                />\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Starting Point</label>\n                  <input\n                    type=\"text\"\n                    value={selectedRoute.startingPoint}\n                    onChange={(e) => setSelectedRoute({...selectedRoute, startingPoint: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Ending Point</label>\n                  <input\n                    type=\"text\"\n                    value={selectedRoute.endingPoint}\n                    onChange={(e) => setSelectedRoute({...selectedRoute, endingPoint: e.target.value})}\n                  />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Distance (km)</label>\n                  <input\n                    type=\"number\"\n                    value={selectedRoute.totalDistance}\n                    onChange={(e) => setSelectedRoute({...selectedRoute, totalDistance: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Estimated Duration</label>\n                  <input\n                    type=\"text\"\n                    value={selectedRoute.estimatedDuration}\n                    onChange={(e) => setSelectedRoute({...selectedRoute, estimatedDuration: e.target.value})}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Base Fare (₹)</label>\n                <input\n                  type=\"number\"\n                  value={selectedRoute.baseFare}\n                  onChange={(e) => setSelectedRoute({...selectedRoute, baseFare: parseInt(e.target.value)})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  value={selectedRoute.status}\n                  onChange={(e) => setSelectedRoute({...selectedRoute, status: e.target.value})}\n                >\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowEditModal(false)}>\n                Cancel\n              </button>\n              <button className=\"btn btn-primary\" onClick={handleEditRoute}>\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Route Modal */}\n      {showDeleteModal && selectedRoute && (\n        <div className=\"modal-overlay\" onClick={() => setShowDeleteModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Delete Route</h2>\n              <button className=\"modal-close\" onClick={() => setShowDeleteModal(false)}>\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"delete-confirmation\">\n                <AlertCircle size={48} className=\"warning-icon\" />\n                <h3>Are you sure?</h3>\n                <p>You are about to delete the route <strong>{selectedRoute.routeName}</strong>. This action cannot be undone.</p>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowDeleteModal(false)}>\n                Cancel\n              </button>\n              <button className=\"btn btn-danger\" onClick={handleDeleteRoute}>\n                Delete Route\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RouteManagement;\n\n"],"names":["RouteManagement","routes","setRoutes","useState","loading","setLoading","refreshing","setRefreshing","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","selectedRoute","setSelectedRoute","selectedRoutes","setSelectedRoutes","searchTerm","setSearchTerm","statusFilter","setStatusFilter","distanceFilter","setDistanceFilter","sortBy","setSortBy","sortOrder","setSortOrder","showAnalytics","setShowAnalytics","newRoute","setNewRoute","routeNumber","routeName","startingPoint","endingPoint","totalDistance","estimatedDuration","baseFare","status","description","stops","amenities","frequency","capacity","isBulkMode","setIsBulkMode","lastUpdated","setLastUpdated","Date","connectionStatus","useEffect","fetchRoutes","interval","setInterval","clearInterval","routeStats","useMemo","totalRoutes","length","activeRoutes","filter","route","reduce","sum","averageFare","popularRoutes","sort","a","b","popularity","slice","inactiveRoutes","filteredRoutes","filtered","matchesSearch","toLowerCase","includes","matchesStatus","matchesDistance","distance","aVal","bVal","async","response","routeApiService","getRoutes","console","log","routesData","success","data","Array","isArray","sampleRoutes","_id","routeId","rating","bookings","revenue","totalStops","routeType","busType","lastMaintenance","nextMaintenance","assignedBuses","driver","conductor","crewStatus","error","handleAddRoute","useCallback","routeData","_objectSpread","concat","now","parseInt","Math","floor","random","prev","handleEditRoute","updatedRoutes","map","handleDeleteRoute","handleBulkDelete","handleRefresh","handleSort","column","handleRouteSelect","checked","id","handleSelectAll","_jsxs","className","children","_jsx","Loader2","size","Route","Activity","toLocaleTimeString","onClick","disabled","RefreshCw","Upload","Download","Plus","CheckCircle","AlertCircle","BarChart3","_route$assignedBuses","Search","type","placeholder","value","onChange","e","target","X","Star","Trash2","Target","index","toLocaleString","round","ChevronUp","ChevronDown","title","MoreVertical","colSpan","stopPropagation"],"sourceRoot":""}