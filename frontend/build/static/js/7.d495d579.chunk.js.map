{"version":3,"file":"static/js/7.d495d579.chunk.js","mappings":"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","sources":["pages/depot/components/StaffManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../context/AuthContext';\nimport './StaffManagement.css';\n\nconst StaffManagement = () => {\n  const { user } = useAuth();\n  const [staff, setStaff] = useState([]);\n  const [, setDrivers] = useState([]);\n  const [, setConductors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedStaff, setSelectedStaff] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterRole, setFilterRole] = useState('all');\n  const [activeTab, setActiveTab] = useState('drivers');\n  const [stats, setStats] = useState({\n    totalDrivers: 0,\n    activeDrivers: 0,\n    totalConductors: 0,\n    activeConductors: 0\n  });\n\n  // Form states\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'driver',\n    employeeId: '',\n    licenseNumber: '',\n    licenseExpiry: '',\n    address: '',\n    emergencyContact: '',\n    joiningDate: '',\n    salary: 0,\n    status: 'active',\n    notes: ''\n  });\n\n  const staffRoles = [\n    { value: 'driver', label: 'Driver' },\n    { value: 'conductor', label: 'Conductor' }\n  ];\n\n  const staffStatuses = [\n    { value: 'active', label: 'Active' },\n    { value: 'inactive', label: 'Inactive' },\n    { value: 'suspended', label: 'Suspended' },\n    { value: 'on_leave', label: 'On Leave' }\n  ];\n\n  useEffect(() => {\n    fetchStaff();\n  }, []);\n\n  const fetchStaff = async () => {\n    try {\n      setLoading(true);\n      // Use different endpoints based on user role\n      const userRole = JSON.parse(localStorage.getItem('user') || '{}').role;\n      console.log('User role:', userRole);\n      \n      // For now, use the original endpoints until the new ones are working\n      const driverEndpoint = '/api/driver/all';\n      const conductorEndpoint = '/api/conductor/all';\n      console.log('Using endpoints:', { driverEndpoint, conductorEndpoint });\n      \n      const [driversRes, conductorsRes] = await Promise.all([\n        fetch(driverEndpoint, {\n          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n        }),\n        fetch(conductorEndpoint, {\n          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n        })\n      ]);\n\n      if (!driversRes.ok) {\n        console.error('Driver fetch failed:', driversRes.status, await driversRes.text());\n      }\n      if (!conductorsRes.ok) {\n        console.error('Conductor fetch failed:', conductorsRes.status, await conductorsRes.text());\n      }\n      \n      const driversData = driversRes.ok ? await driversRes.json() : { data: [] };\n      const conductorsData = conductorsRes.ok ? await conductorsRes.json() : { data: [] };\n\n      const driversList = Array.isArray(driversData.data) ? driversData.data : (driversData.data?.drivers || []);\n      const conductorsList = Array.isArray(conductorsData.data) ? conductorsData.data : (conductorsData.data?.conductors || []);\n\n      // Normalize shape and add role to enable filtering\n      const driversMapped = driversList.map(d => ({\n        ...d,\n        role: 'driver',\n        employeeId: d.employeeCode || d.employeeId || d.driverId || '',\n        licenseNumber: d.drivingLicense?.licenseNumber || d.licenseNumber || '',\n        licenseExpiry: d.drivingLicense?.expiryDate || d.licenseExpiry || '',\n        joiningDate: d.joiningDate || d.createdAt\n      }));\n\n      const conductorsMapped = conductorsList.map(c => ({\n        ...c,\n        role: 'conductor',\n        employeeId: c.employeeCode || c.employeeId || c.conductorId || '',\n        licenseNumber: c.licenseNumber || '',\n        licenseExpiry: c.licenseExpiry || '',\n        joiningDate: c.joiningDate || c.createdAt\n      }));\n\n      setDrivers(driversMapped);\n      setConductors(conductorsMapped);\n\n      // Calculate active drivers as those with a duty assigned/active today\n      const today = new Date();\n      const yyyy = today.getFullYear();\n      const mm = String(today.getMonth() + 1).padStart(2, '0');\n      const dd = String(today.getDate()).padStart(2, '0');\n      const todayStr = `${yyyy}-${mm}-${dd}`;\n\n      let activeAssignedDriverCount = 0;\n      let activeAssignedConductorCount = 0;\n      try {\n        const tripsQueryParams = new URLSearchParams({ date: todayStr });\n        // If depot is available, scope by depotId for safety (backend already scopes by auth)\n        const depotId = JSON.parse(localStorage.getItem('user') || '{}').depotId || user?.depotId;\n        if (depotId) tripsQueryParams.append('depotId', depotId);\n\n        const dutiesRes = await fetch(`/api/depot/trips?${tripsQueryParams.toString()}`, {\n          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n        });\n        if (dutiesRes.ok) {\n          const dutiesJson = await dutiesRes.json();\n          const duties = Array.isArray(dutiesJson.data?.trips) ? dutiesJson.data.trips : (Array.isArray(dutiesJson.data) ? dutiesJson.data : []);\n          const activeStatuses = new Set(['scheduled', 'running', 'in-progress', 'on-break', 'assigned', 'started']);\n          const driverIdsSet = new Set(\n            duties\n              .filter(d => activeStatuses.has(d.status))\n              .map(d => {\n                const drv = d.driverId; // could be id or populated object\n                if (!drv) return null;\n                if (typeof drv === 'string') return drv;\n                if (typeof drv === 'object') return drv._id || drv.id || null;\n                return null;\n              })\n              .filter(Boolean)\n          );\n          activeAssignedDriverCount = driverIdsSet.size;\n\n          const conductorIdsSet = new Set(\n            duties\n              .filter(d => activeStatuses.has(d.status))\n              .map(d => {\n                const cnd = d.conductorId;\n                if (!cnd) return null;\n                if (typeof cnd === 'string') return cnd;\n                if (typeof cnd === 'object') return cnd._id || cnd.id || null;\n                return null;\n              })\n              .filter(Boolean)\n          );\n          activeAssignedConductorCount = conductorIdsSet.size;\n        }\n      } catch (e) {\n        // Fallback silently; keep previous calculation if duty API fails\n        console.warn('Failed to fetch duties for active drivers calc:', e);\n      }\n\n      setStats(prev => ({\n        ...prev,\n        totalDrivers: driversList.length,\n        activeDrivers: activeAssignedDriverCount,\n        totalConductors: conductorsList.length,\n        activeConductors: activeAssignedConductorCount\n      }));\n\n      setStaff([...driversMapped, ...conductorsMapped]);\n    } catch (error) {\n      console.error('Error fetching staff:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStaff = async (e) => {\n    e.preventDefault();\n    try {\n      const endpoint = formData.role === 'driver' ? '/api/driver' : '/api/conductor';\n\n      // Map UI form to backend validation shape\n      const depotId = JSON.parse(localStorage.getItem('user') || '{}').depotId || user?.depotId;\n      const usernameFallback = (formData.email || formData.phone || `${formData.name}`)\n        .toLowerCase()\n        .replace(/[^a-z0-9_]/g, '_')\n        .slice(0, 20);\n      const temporaryPassword = (formData.password && formData.password.length >= 8)\n        ? formData.password\n        : 'TempPass@123';\n\n      // Parse emergency contact from a single-line input like \"Name, 9123456789\"\n      const parseEmergency = (value) => {\n        if (!value || typeof value !== 'string') return undefined;\n        const digitsMatch = value.match(/([6-9]\\d{9})/);\n        const phone = digitsMatch ? digitsMatch[1] : '';\n        const namePart = value.replace(/([6-9]\\d{9})/g, '').replace(/[,-]/g, ' ').replace(/\\s+/g, ' ').trim();\n        const name = namePart || '';\n        // Only include if both look valid\n        if (name.length >= 2 && /^[6-9]\\d{9}$/.test(phone)) {\n          return { name, phone, relationship: '' };\n        }\n        return undefined; // omit to satisfy optional() validator\n      };\n\n      const payloadBase = {\n        name: formData.name,\n        phone: String(formData.phone || '').replace(/\\D/g, ''),\n        email: formData.email,\n        employeeCode: formData.employeeId || formData.employeeCode || undefined,\n        username: formData.username || usernameFallback,\n        password: temporaryPassword,\n        depotId,\n        address: formData.address,\n        // Only include emergencyContact if parsable/valid\n        ...(typeof formData.emergencyContact === 'object' && formData.emergencyContact\n          ? { emergencyContact: formData.emergencyContact }\n          : (() => {\n              const ec = parseEmergency(formData.emergencyContact);\n              return ec ? { emergencyContact: ec } : {};\n            })()\n        ),\n        salary: typeof formData.salary === 'object' ? formData.salary : { basic: Number(formData.salary) || 0, allowances: 0, bonus: 0 },\n        status: formData.status || 'active',\n        notes: formData.notes || ''\n      };\n\n      const payload = formData.role === 'driver'\n        ? {\n            ...payloadBase,\n            drivingLicense: {\n              licenseNumber: formData.licenseNumber || 'TEMP000000',\n              type: formData.licenseType || 'LMV',\n              issueDate: formData.licenseIssueDate || new Date().toISOString().slice(0, 10),\n              expiryDate: formData.licenseExpiry || new Date(Date.now() + 365*24*60*60*1000).toISOString().slice(0,10),\n              issuingAuthority: formData.issuingAuthority || 'RTO'\n            }\n          }\n        : payloadBase;\n\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        setShowAddModal(false);\n        resetForm();\n        fetchStaff();\n      } else {\n        let error;\n        try { error = await response.json(); } catch { error = {}; }\n        const messages = Array.isArray(error.errors)\n          ? error.errors.map(e => `${e.path || e.param || 'field'}: ${e.msg}`).join('\\n')\n          : '';\n        alert(error.message + (messages ? `\\n${messages}` : '') || 'Failed to add staff member');\n      }\n    } catch (error) {\n      console.error('Error adding staff:', error);\n      alert('Failed to add staff member');\n    }\n  };\n\n  const handleEditStaff = async (e) => {\n    e.preventDefault();\n    try {\n      const userRole = JSON.parse(localStorage.getItem('user') || '{}').role;\n      \n      // Only admins can edit staff\n      if (userRole !== 'admin') {\n        alert('Only administrators can edit staff members');\n        return;\n      }\n      \n      const endpoint = selectedStaff.role === 'driver' ? \n        `/api/driver/${selectedStaff._id}` : \n        `/api/conductor/${selectedStaff._id}`;\n      \n      const response = await fetch(endpoint, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        setShowEditModal(false);\n        resetForm();\n        fetchStaff();\n      } else {\n        const error = await response.json();\n        alert(error.message || 'Failed to update staff member');\n      }\n    } catch (error) {\n      console.error('Error updating staff:', error);\n      alert('Failed to update staff member');\n    }\n  };\n\n  const handleDeleteStaff = async () => {\n    try {\n      const userRole = JSON.parse(localStorage.getItem('user') || '{}').role;\n      \n      // Only admins can delete staff\n      if (userRole !== 'admin') {\n        alert('Only administrators can delete staff members');\n        return;\n      }\n      \n      const endpoint = selectedStaff.role === 'driver' ? \n        `/api/driver/${selectedStaff._id}` : \n        `/api/conductor/${selectedStaff._id}`;\n      \n      const response = await fetch(endpoint, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.ok) {\n        setShowDeleteModal(false);\n        setSelectedStaff(null);\n        fetchStaff();\n      } else {\n        const error = await response.json();\n        alert(error.message || 'Failed to delete staff member');\n      }\n    } catch (error) {\n      console.error('Error deleting staff:', error);\n      alert('Failed to delete staff member');\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      role: 'driver',\n      employeeId: '',\n      licenseNumber: '',\n      licenseExpiry: '',\n      address: '',\n      emergencyContact: '',\n      joiningDate: '',\n      salary: 0,\n      status: 'active',\n      notes: ''\n    });\n  };\n\n  const openEditModal = (staffMember) => {\n    setSelectedStaff(staffMember);\n    setFormData({\n      name: staffMember.name || '',\n      email: staffMember.email || '',\n      phone: staffMember.phone || '',\n      role: staffMember.role || 'driver',\n      employeeId: staffMember.employeeId || '',\n      licenseNumber: staffMember.licenseNumber || '',\n      licenseExpiry: staffMember.licenseExpiry ? new Date(staffMember.licenseExpiry).toISOString().slice(0, 10) : '',\n      address: staffMember.address || '',\n      emergencyContact: staffMember.emergencyContact || '',\n      joiningDate: staffMember.joiningDate ? new Date(staffMember.joiningDate).toISOString().slice(0, 10) : '',\n      salary: staffMember.salary || 0,\n      status: staffMember.status || 'active',\n      notes: staffMember.notes || ''\n    });\n    setShowEditModal(true);\n  };\n\n  const openDeleteModal = (staffMember) => {\n    setSelectedStaff(staffMember);\n    setShowDeleteModal(true);\n  };\n\n  const filteredStaff = staff.filter(staffMember => {\n    const matchesSearch = \n      staffMember.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      staffMember.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      staffMember.employeeId?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      staffMember.licenseNumber?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = filterStatus === 'all' || staffMember.status === filterStatus;\n    const matchesRole = filterRole === 'all' || staffMember.role === filterRole;\n    \n    return matchesSearch && matchesStatus && matchesRole;\n  });\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'green';\n      case 'inactive': return 'red';\n      case 'suspended': return 'orange';\n      case 'on_leave': return 'blue';\n      default: return 'gray';\n    }\n  };\n\n  const getStatusLabel = (status) => {\n    return staffStatuses.find(s => s.value === status)?.label || status;\n  };\n\n  const getRoleLabel = (role) => {\n    return staffRoles.find(r => r.value === role)?.label || role;\n  };\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString('en-IN');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"staff-loading\">\n        <div className=\"loading-spinner\"></div>\n        <h3>Loading Staff Management...</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"staff-management\">\n      <div className=\"staff-header\">\n        <div className=\"header-left\">\n          <h1>Staff Management</h1>\n          <p>Manage drivers, conductors, and depot personnel</p>\n        </div>\n        <div className=\"header-right\">\n          <button \n            className=\"add-staff-btn\"\n            onClick={() => setShowAddModal(true)}\n          >\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Add Staff\n          </button>\n        </div>\n      </div>\n\n      {/* Banner removed per request */}\n\n      {/* Stats Cards */}\n      <div className=\"staff-stats\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon blue\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\" />\n            </svg>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.totalDrivers}</h3>\n            <p>Total Drivers</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon green\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.activeDrivers}</h3>\n            <p>Active Drivers</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon orange\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\" />\n            </svg>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.totalConductors}</h3>\n            <p>Total Conductors</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon purple\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.activeConductors}</h3>\n            <p>Active Conductors</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"staff-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'all' ? 'active' : ''}`}\n          onClick={() => setActiveTab('all')}\n        >\n          All Staff\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'drivers' ? 'active' : ''}`}\n          onClick={() => setActiveTab('drivers')}\n        >\n          Drivers\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'conductors' ? 'active' : ''}`}\n          onClick={() => setActiveTab('conductors')}\n        >\n          Conductors\n        </button>\n      </div>\n\n      {/* Controls */}\n      <div className=\"staff-controls\">\n        <div className=\"search-section\">\n          <div className=\"search-input-wrapper\">\n            <svg className=\"search-icon\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414L10.89 9.89A6 6 0 012 8z\" clipRule=\"evenodd\" />\n            </svg>\n            <input\n              type=\"text\"\n              placeholder=\"Search staff by name, email, or ID...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n          </div>\n        </div>\n\n        <div className=\"filter-section\">\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Status</option>\n            {staffStatuses.map(status => (\n              <option key={status.value} value={status.value}>{status.label}</option>\n            ))}\n          </select>\n\n          <select\n            value={filterRole}\n            onChange={(e) => setFilterRole(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Roles</option>\n            {staffRoles.map(role => (\n              <option key={role.value} value={role.value}>{role.label}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Staff Table */}\n      <div className=\"staff-table-container\">\n        <table className=\"staff-table\">\n          <thead>\n            <tr>\n              <th>Staff Member</th>\n              <th>Role</th>\n              <th>Contact</th>\n              <th>License/ID</th>\n              <th>Joining Date</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredStaff.map((staffMember) => (\n              <tr key={staffMember._id}>\n                <td>\n                  <div className=\"staff-info\">\n                    <div className=\"staff-avatar\">\n                      {staffMember.name?.charAt(0) || 'S'}\n                    </div>\n                    <div className=\"staff-details\">\n                      <div className=\"staff-name\">{staffMember.name}</div>\n                      <div className=\"staff-id\">ID: {staffMember.employeeId}</div>\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <span className={`role-badge ${staffMember.role}`}>\n                    {getRoleLabel(staffMember.role)}\n                  </span>\n                </td>\n                <td>\n                  <div className=\"contact-info\">\n                    <div className=\"contact-email\">{staffMember.email}</div>\n                    <div className=\"contact-phone\">{staffMember.phone}</div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"license-info\">\n                    <div className=\"license-number\">\n                      {staffMember.role === 'driver' ? 'License: ' : 'ID: '}\n                      {staffMember.licenseNumber || staffMember.employeeId}\n                    </div>\n                    {staffMember.licenseExpiry && (\n                      <div className=\"license-expiry\">\n                        Expires: {formatDate(staffMember.licenseExpiry)}\n                      </div>\n                    )}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"joining-info\">\n                    {staffMember.joiningDate ? formatDate(staffMember.joiningDate) : 'N/A'}\n                  </div>\n                </td>\n                <td>\n                  <span className={`status-badge ${getStatusColor(staffMember.status)}`}>\n                    {getStatusLabel(staffMember.status)}\n                  </span>\n                </td>\n                <td>\n                  <div className=\"action-buttons\">\n                    {JSON.parse(localStorage.getItem('user') || '{}').role === 'admin' && (\n                      <>\n                        <button\n                          className=\"action-btn view\"\n                          onClick={() => openEditModal(staffMember)}\n                          title=\"View/Edit\"\n                        >\n                          <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                            <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </button>\n                        <button\n                          className=\"action-btn delete\"\n                          onClick={() => openDeleteModal(staffMember)}\n                          title=\"Delete\"\n                        >\n                          <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </button>\n                      </>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {filteredStaff.length === 0 && (\n          <div className=\"no-staff\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\" />\n            </svg>\n            <h3>No staff members found</h3>\n            <p>Try adjusting your search or filters</p>\n          </div>\n        )}\n      </div>\n\n      {/* Add Staff Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Add New Staff Member</h2>\n              <button \n                className=\"modal-close\"\n                onClick={() => {\n                  setShowAddModal(false);\n                  resetForm();\n                }}\n              >\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            <form onSubmit={handleAddStaff} className=\"staff-form\">\n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label>Full Name *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({...formData, name: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email *</label>\n                  <input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({...formData, email: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Phone *</label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({...formData, phone: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Role *</label>\n                  <select\n                    value={formData.role}\n                    onChange={(e) => setFormData({...formData, role: e.target.value})}\n                    required\n                  >\n                    {staffRoles.map(role => (\n                      <option key={role.value} value={role.value}>{role.label}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Employee ID *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.employeeId}\n                    onChange={(e) => setFormData({...formData, employeeId: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>{formData.role === 'driver' ? 'License Number' : 'ID Number'} *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.licenseNumber}\n                    onChange={(e) => setFormData({...formData, licenseNumber: e.target.value})}\n                    required\n                  />\n                </div>\n\n                {formData.role === 'driver' && (\n                  <div className=\"form-group\">\n                    <label>License Expiry Date</label>\n                    <input\n                      type=\"date\"\n                      value={formData.licenseExpiry}\n                      onChange={(e) => setFormData({...formData, licenseExpiry: e.target.value})}\n                    />\n                  </div>\n                )}\n\n                <div className=\"form-group\">\n                  <label>Joining Date</label>\n                  <input\n                    type=\"date\"\n                    value={formData.joiningDate}\n                    onChange={(e) => setFormData({...formData, joiningDate: e.target.value})}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Salary (₹)</label>\n                  <input\n                    type=\"number\"\n                    value={formData.salary}\n                    onChange={(e) => setFormData({...formData, salary: parseFloat(e.target.value)})}\n                    min=\"0\"\n                    step=\"0.01\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Status</label>\n                  <select\n                    value={formData.status}\n                    onChange={(e) => setFormData({...formData, status: e.target.value})}\n                  >\n                    {staffStatuses.map(status => (\n                      <option key={status.value} value={status.value}>{status.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Address</label>\n                <textarea\n                  value={formData.address}\n                  onChange={(e) => setFormData({...formData, address: e.target.value})}\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Emergency Contact</label>\n                <input\n                  type=\"tel\"\n                  value={formData.emergencyContact}\n                  onChange={(e) => setFormData({...formData, emergencyContact: e.target.value})}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Notes</label>\n                <textarea\n                  value={formData.notes}\n                  onChange={(e) => setFormData({...formData, notes: e.target.value})}\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"modal-actions\">\n                <button type=\"button\" className=\"btn-secondary\" onClick={() => {\n                  setShowAddModal(false);\n                  resetForm();\n                }}>\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  Add Staff Member\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Staff Modal */}\n      {showEditModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Edit Staff Member - {selectedStaff?.name}</h2>\n              <button \n                className=\"modal-close\"\n                onClick={() => {\n                  setShowEditModal(false);\n                  resetForm();\n                }}\n              >\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            <form onSubmit={handleEditStaff} className=\"staff-form\">\n              {/* Same form fields as Add Modal */}\n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label>Full Name *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({...formData, name: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email *</label>\n                  <input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({...formData, email: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Phone *</label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({...formData, phone: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Role *</label>\n                  <select\n                    value={formData.role}\n                    onChange={(e) => setFormData({...formData, role: e.target.value})}\n                    required\n                  >\n                    {staffRoles.map(role => (\n                      <option key={role.value} value={role.value}>{role.label}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Employee ID *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.employeeId}\n                    onChange={(e) => setFormData({...formData, employeeId: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>{formData.role === 'driver' ? 'License Number' : 'ID Number'} *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.licenseNumber}\n                    onChange={(e) => setFormData({...formData, licenseNumber: e.target.value})}\n                    required\n                  />\n                </div>\n\n                {formData.role === 'driver' && (\n                  <div className=\"form-group\">\n                    <label>License Expiry Date</label>\n                    <input\n                      type=\"date\"\n                      value={formData.licenseExpiry}\n                      onChange={(e) => setFormData({...formData, licenseExpiry: e.target.value})}\n                    />\n                  </div>\n                )}\n\n                <div className=\"form-group\">\n                  <label>Joining Date</label>\n                  <input\n                    type=\"date\"\n                    value={formData.joiningDate}\n                    onChange={(e) => setFormData({...formData, joiningDate: e.target.value})}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Salary (₹)</label>\n                  <input\n                    type=\"number\"\n                    value={formData.salary}\n                    onChange={(e) => setFormData({...formData, salary: parseFloat(e.target.value)})}\n                    min=\"0\"\n                    step=\"0.01\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Status</label>\n                  <select\n                    value={formData.status}\n                    onChange={(e) => setFormData({...formData, status: e.target.value})}\n                  >\n                    {staffStatuses.map(status => (\n                      <option key={status.value} value={status.value}>{status.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Address</label>\n                <textarea\n                  value={formData.address}\n                  onChange={(e) => setFormData({...formData, address: e.target.value})}\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Emergency Contact</label>\n                <input\n                  type=\"tel\"\n                  value={formData.emergencyContact}\n                  onChange={(e) => setFormData({...formData, emergencyContact: e.target.value})}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Notes</label>\n                <textarea\n                  value={formData.notes}\n                  onChange={(e) => setFormData({...formData, notes: e.target.value})}\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"modal-actions\">\n                <button type=\"button\" className=\"btn-secondary\" onClick={() => {\n                  setShowEditModal(false);\n                  resetForm();\n                }}>\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  Update Staff Member\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content delete-modal\">\n            <div className=\"modal-header\">\n              <h2>Delete Staff Member</h2>\n              <button \n                className=\"modal-close\"\n                onClick={() => setShowDeleteModal(false)}\n              >\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"delete-content\">\n              <div className=\"delete-icon\">\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <h3>Are you sure you want to delete this staff member?</h3>\n              <p>This action cannot be undone. The staff member \"{selectedStaff?.name}\" will be permanently removed.</p>\n              \n              <div className=\"staff-details\">\n                <div className=\"detail-item\">\n                  <span className=\"label\">Name:</span>\n                  <span className=\"value\">{selectedStaff?.name}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"label\">Role:</span>\n                  <span className=\"value\">{getRoleLabel(selectedStaff?.role)}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"label\">Employee ID:</span>\n                  <span className=\"value\">{selectedStaff?.employeeId}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"label\">Status:</span>\n                  <span className=\"value\">{getStatusLabel(selectedStaff?.status)}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn-secondary\" \n                onClick={() => setShowDeleteModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"button\" \n                className=\"btn-danger\" \n                onClick={handleDeleteStaff}\n              >\n                Delete Staff Member\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StaffManagement;\n\n"],"names":["StaffManagement","user","useAuth","staff","setStaff","useState","setDrivers","setConductors","loading","setLoading","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","selectedStaff","setSelectedStaff","searchTerm","setSearchTerm","filterStatus","setFilterStatus","filterRole","setFilterRole","activeTab","setActiveTab","stats","setStats","totalDrivers","activeDrivers","totalConductors","activeConductors","formData","setFormData","name","email","phone","role","employeeId","licenseNumber","licenseExpiry","address","emergencyContact","joiningDate","salary","status","notes","staffRoles","value","label","staffStatuses","useEffect","fetchStaff","async","_driversData$data","_conductorsData$data","userRole","JSON","parse","localStorage","getItem","console","log","driverEndpoint","conductorEndpoint","driversRes","conductorsRes","Promise","all","fetch","headers","concat","ok","error","text","driversData","json","data","conductorsData","driversList","Array","isArray","drivers","conductorsList","conductors","driversMapped","map","d","_d$drivingLicense","_d$drivingLicense2","_objectSpread","employeeCode","driverId","drivingLicense","expiryDate","createdAt","conductorsMapped","c","conductorId","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","todayStr","activeAssignedDriverCount","activeAssignedConductorCount","tripsQueryParams","URLSearchParams","date","depotId","append","dutiesRes","toString","_dutiesJson$data","dutiesJson","duties","trips","activeStatuses","Set","driverIdsSet","filter","has","drv","_id","id","Boolean","size","conductorIdsSet","cnd","e","warn","prev","length","resetForm","filteredStaff","staffMember","_staffMember$name","_staffMember$email","_staffMember$employee","_staffMember$licenseN","matchesSearch","toLowerCase","includes","matchesStatus","matchesRole","getStatusColor","getStatusLabel","_staffStatuses$find","find","s","getRoleLabel","_staffRoles$find","r","formatDate","toLocaleDateString","_jsxs","className","children","_jsx","onClick","fill","viewBox","fillRule","clipRule","type","placeholder","onChange","target","_staffMember$name2","charAt","_Fragment","toISOString","slice","openEditModal","title","openDeleteModal","onSubmit","preventDefault","endpoint","usernameFallback","replace","temporaryPassword","password","parseEmergency","digitsMatch","match","trim","test","relationship","payloadBase","undefined","username","ec","basic","Number","allowances","bonus","payload","licenseType","issueDate","licenseIssueDate","now","issuingAuthority","response","method","body","stringify","_unused","messages","errors","path","param","msg","join","alert","message","required","parseFloat","min","step","rows"],"sourceRoot":""}